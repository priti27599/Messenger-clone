[{"F:\\react2020\\facebook-messenger-clone\\src\\index.js":"1","F:\\react2020\\facebook-messenger-clone\\src\\App.js":"2","F:\\react2020\\facebook-messenger-clone\\src\\reportWebVitals.js":"3","F:\\react2020\\facebook-messenger-clone\\src\\Message.js":"4","F:\\react2020\\facebook-messenger-clone\\src\\firebase.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":2089,"mtime":1606603212335,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"7"},{"size":868,"mtime":1606603365970,"results":"11","hashOfConfig":"9"},{"size":596,"mtime":1606588084086,"results":"12","hashOfConfig":"9"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"n16zd5",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"aklpw7",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\react2020\\facebook-messenger-clone\\src\\index.js",[],["27","28"],"F:\\react2020\\facebook-messenger-clone\\src\\App.js",["29","30"],"import React, { useState, useEffect } from 'react';\nimport { Button, FormControl, InputLabel, Input } from '@material-ui/core';\nimport './App.css';\nimport Message from './Message';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nfunction App() {\n  const [input, setInput]=useState('');\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState('');\n  \n  //useState = variable in react\n  //useEffect = run code on a condition\n\n  useEffect(() => {\n    //run once when the app component loads\n    db.collection('messages')\n    .orderBy('timestamp', 'desc')\n    .onSnapshot(snapshot =>{\n      setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})))\n    });\n  }, [])\n\n  useEffect(() => {\n    setUsername(prompt('Please enter your name'))\n  }, [])\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n   db.collection('messages').add({\n     message: input,\n     username: username,\n     timestamp: firebase.firestore.FieldValue.serverTimestamp()\n   })\n    setInput('');\n  }\n  return (\n    <div className=\"App\">\n      <img src=\"https://facebookbrand.com/wp-content/uploads/2018/09/Header-e1538151782912.png?w=100&h=100\" />\n     <h1>Hello Everyone</h1>\n      <h2>Welcome {username}</h2>\n    \n     <form className=\"app__form\">\n     <FormControl className=\"app__formControl\">\n       <InputLabel>Enter a message...</InputLabel>\n       <Input className=\"app__input\" placeholder='Enter a message' value={input} onChange={event => setInput(event.target.value)}/>\n       <IconButton className=\"app__iconButton\" disabled={!input} variant=\"contained\" color=\"primary\" type='submit' onClick={sendMessage}>\n       <SendIcon />\n       </IconButton>\n     </FormControl>\n     </form>\n\n     <FlipMove>\n     {\n       messages.map(({id, message}) => (\n         <Message  key={id} username={username} message={message} />\n       ))\n     }\n     </FlipMove>\n     \n    </div>\n  );\n}\n\nexport default App;\n",["31","32"],"F:\\react2020\\facebook-messenger-clone\\src\\reportWebVitals.js",[],["33","34"],"F:\\react2020\\facebook-messenger-clone\\src\\Message.js",[],"F:\\react2020\\facebook-messenger-clone\\src\\firebase.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":10,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":44,"column":7,"nodeType":"45","endLine":44,"endColumn":111},{"ruleId":"35","replacedBy":"46"},{"ruleId":"37","replacedBy":"47"},{"ruleId":"35","replacedBy":"48"},{"ruleId":"37","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["50"],["51"],["50"],["51"],"no-global-assign","no-unsafe-negation"]